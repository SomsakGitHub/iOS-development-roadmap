struct User: Codable {
    let name: String
    let age: Int
}

import UIKit
import SwiftUI

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        
    }
    
    @IBAction func SwiftUITapped(_ sender: Any) {
        let swiftUIView = ContentView()
        pushViewController(rootView: swiftUIView)
    }
    
    @IBAction func CombineMVVMTapped(_ sender: Any) {
        let swiftUIView = Combine_MVVM()
        pushViewController(rootView: swiftUIView)
    }
    
    func pushViewController<Content: View>(rootView: Content) {

        // 3. ‡∏´‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢ UIHostingController
        let hostingController = UIHostingController(rootView: rootView)
        
        // 4. Present ‡πÅ‡∏ö‡∏ö modal
        present(hostingController, animated: true, completion: nil)
    }

    func UserDefaultsDetail() {
        //üß† UserDefaults ‡∏Ñ‡∏∑‡∏≠‡∏≠‡∏∞‡πÑ‡∏£
        //
        //‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å (key-value) ‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        //‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ö SharedPreferences ‡∏Ç‡∏≠‡∏á Android ‡∏´‡∏£‡∏∑‡∏≠ LocalStorage ‡πÉ‡∏ô‡πÄ‡∏ß‡πá‡∏ö
        //
        //‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå .plist ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏ô‡∏±‡πâ‡∏ô ‡πÜ
        //‡πÅ‡∏•‡∏∞‡∏¢‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πà‡∏≠‡πÅ‡∏°‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏≠‡∏õ
        
        //‚öôÔ∏è ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
        //‚úÖ 1. ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤
        UserDefaults.standard.set(true, forKey: "isLoggedIn")
        UserDefaults.standard.set("John", forKey: "username")
        UserDefaults.standard.set(25, forKey: "age")

        //‚úÖ 2. ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤
        //üí° ‡∏ñ‡πâ‡∏≤ key ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà ‡∏à‡∏∞‡πÑ‡∏î‡πâ ‚Äú‡∏Ñ‡πà‡∏≤ default‚Äù (false, 0, ‡∏´‡∏£‡∏∑‡∏≠ nil)
        let loggedIn = UserDefaults.standard.bool(forKey: "isLoggedIn")
        let username = UserDefaults.standard.string(forKey: "username")
        let age = UserDefaults.standard.integer(forKey: "age")

//        ‚úÖ 3. ‡∏•‡∏ö‡∏Ñ‡πà‡∏≤
        UserDefaults.standard.removeObject(forKey: "username")
        
//        ‚úÖ 4. ‡∏•‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
//        ‚ö†Ô∏è ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ß‡∏±‡∏á‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‚Äî ‡∏à‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
        if let bundle = Bundle.main.bundleIdentifier {
            UserDefaults.standard.removePersistentDomain(forName: bundle)
        }

//        üß± ‡πÄ‡∏Å‡πá‡∏ö Struct ‡∏´‡∏£‡∏∑‡∏≠ Object ‡∏î‡πâ‡∏ß‡∏¢ Codable
//        UserDefaults ‡πÄ‡∏Å‡πá‡∏ö‡πÅ‡∏Ñ‡πà primitive type
//        ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Å‡πá‡∏ö struct ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£ encode ‚Üí Data ‡∏Å‡πà‡∏≠‡∏ô
        let user = User(name: "Alice", age: 22)
        
//        ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö:
        if let encoded = try? JSONEncoder().encode(user) {
            UserDefaults.standard.set(encoded, forKey: "savedUser")
        }
        
//        ‚úÖ ‡∏î‡∏∂‡∏á:
//        üí° ‡πÉ‡∏ä‡πâ JSONEncoder / JSONDecoder ‡∏ä‡πà‡∏ß‡∏¢‡πÅ‡∏õ‡∏•‡∏á struct ‡πÄ‡∏õ‡πá‡∏ô Data ‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡∏°‡∏≤‡∏Å
        if let data = UserDefaults.standard.data(forKey: "savedUser"),
           let savedUser = try? JSONDecoder().decode(User.self, from: data) {
            print("‡∏ä‡∏∑‡πà‡∏≠:", savedUser.name)
        }
    }
}

