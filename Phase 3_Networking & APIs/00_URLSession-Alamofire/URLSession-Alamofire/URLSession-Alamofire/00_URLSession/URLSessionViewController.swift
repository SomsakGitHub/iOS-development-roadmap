//    üåê 1. URLSession (‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô Networking ‡∏Ç‡∏≠‡∏á iOS)
//
//    ‡πÄ‡∏õ‡πá‡∏ô class ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á Apple ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Å‡∏±‡∏ö HTTP ‡πÄ‡∏ä‡πà‡∏ô GET / POST
//    ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á library ‡πÄ‡∏û‡∏¥‡πà‡∏°

import UIKit

class URLSessionViewController: UIViewController {
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchPosts()
    }
    
    func fetchPosts() {
        guard let url = URL(string: "https://jsonplaceholder.typicode.com/posts/1") else { return }
        
        let task = URLSession.shared.dataTask(with: url) { data, response, error in
            if let error = error {
                print("‚ùå Error: \(error)")
                return
            }
            guard let data = data else { return }
            
            Task { @MainActor in
                do {
                    let post = try JSONDecoder().decode(Post.self, from: data)
                    print("‚úÖ Title:", post.title)
                } catch {
                    print("‚ùå JSON decode failed:", error)
                }
            }
        }
        task.resume()
//        üí° ‡πÉ‡∏ä‡πâ JSONDecoder() ‡πÅ‡∏õ‡∏•‡∏á JSON ‚Üí Struct (‡∏ó‡∏µ‡πà conform Codable)
//        ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö asynchronous ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ task.resume() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î
    }
    
//    üß± ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á POST (‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ server)
    func createPost() {
        guard let url = URL(string: "https://jsonplaceholder.typicode.com/posts") else { return }
        
//        ‚úÖ ‡πÉ‡∏ä‡πâ URLRequest ‡∏Å‡∏≥‡∏´‡∏ô‡∏î method, headers ‡πÅ‡∏•‡∏∞ body ‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á
        var request = URLRequest(url: url)
        request.httpMethod = "POST"
        request.addValue("application/json", forHTTPHeaderField: "Content-Type")

        let newPost = ["title": "Hello", "body": "Swift Networking"]
        request.httpBody = try? JSONSerialization.data(withJSONObject: newPost)

        URLSession.shared.dataTask(with: request) { data, response, error in
            if let data = data {
                print(String(data: data, encoding: .utf8)!)
            }
        }.resume()
    }

}

